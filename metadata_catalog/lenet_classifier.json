{
	"stac_version": "1.0.0",
	"stac_extensions": [
	  "https://stac-extensions.github.io/ml-model/v1.0.0/schema.json"
	],
	"type": "Feature",
	"id": "lenet_classifier",
	"collection": "ml-models-first",
    "geometry": null,
	"properties": {
	  "datetime": "1998-01-01T00:00:00Z",
	  "license": "cc-by-4.0",
	  "providers": [
		{
		  "name": "EPS-IT",
		  "roles": [
			"producer"
		  ],
		  "email": "xyz@epsilon-italia.it",
		  "url": "https://www.epsilon-italia.it/"
		}
	  	],
        "description": "Multi-layer Convolutional Neural Network for image classification",
        "main-category": "Deep Learning",
		"ml-model:type": "ml-model",
		"ml-model:learning_approach": "supervised",
		"ml-model:prediction_type": "classification",
		"ml-model:architecture": "CNN",
		"ml-model:training-processor-type": "gpu",
		"ml-model:training-os": "linux",
        "ml-model:platform": "Google Colab",
        "ml-model:framework": [
            "tensorflow",
            "keras"
        ],
        "ml-model:algorithm":"Lenet",
        "ml-model:performance": "Accuracy score: 0.9505 (validation). Running time: 2 min for 23 training epochs with early stopping (total number of epochs: 50) on a gpu Nvidia a100. Modified hyperparameters: Input shape: (100,100,3); Optimizer: 'adam'; batch size: 128. Train-test-valid split: 70-15-15. Loss function: sparse_categorical_crossentropy.",
        "keywords": [
            "classification", 
            "CNN",
            "LeNet"
        ]
	},

	"links": 
	[
		{
			"rel": "root",
			"href": "./collection.json",
			"type": "application/json",
			"title": "Root Catalog"
		},

		{
			"rel": "parent",
			"href": "./collection.json",
			"type": "application/json",
			"title": "Root Catalog"
		},

		{
			"rel": "collection",
			"href": "./collection.json",
			"type": "application/json"
		},

        {
 			"rel": "self",
			"href": "https://en.wikipedia.org/wiki/LeNet",
            "type": "application/json",
			"title": "reference-link"
        },

         {
 			"rel": "self",
			"href": "https://github.com/cozzolinoac11/wildfire_prediction/blob/main/ann.ipynb",
            "type": "application/json",
			"title": "example"
        },

		{
			"rel": "ml-model:train-data",
			"href": "https://public.epsilon-italia.it/FAIRiCUBE/wildfire-classification/data_numpy.zip",
			"type": "application/json",
			"title": "input data used",
            "description": "Numpy arrays. (Perfectly) balanced classes."
		}

	],
	"assets":
	
		{
			"model-checkpoint":
			{
     			"href": "http://www.epsilon-italia.it/public/model.zip",
      			"type": "application/octet-stream",
				"title": "Model checkpoint",
				"roles": [
        			"ml-model:checkpoint"
      			],
                "description": "Keras model for wildfire or nowildfire classification. The model gets in input a dataset as numpy arrays (dimension 100x100x3) and returns the predicted labels."
			}	
		}

}
